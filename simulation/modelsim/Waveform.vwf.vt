// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "12/29/2022 18:15:50"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          LittleDinosaur
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module LittleDinosaur_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clock;
reg rst;
// wires                                               
wire [6:0] seven;
wire [10:0] test1;
wire [10:0] test2;
wire [10:0] test3;
wire [10:0] test4;
wire [10:0] test5;
wire [13:0] vga;

// assign statements (if any)                          
LittleDinosaur i1 (
// port map - connection between master ports and signals/registers   
	.clock(clock),
	.rst(rst),
	.seven(seven),
	.test1(test1),
	.test2(test2),
	.test3(test3),
	.test4(test4),
	.test5(test5),
	.vga(vga)
);
initial 
begin 
#1000000 $stop;
end 
endmodule

